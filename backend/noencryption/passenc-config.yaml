---
psswd_names:
- psswd
- password
- pwd
salt_names:
- salt
- slt
bad_algorithms:
  sha_2:
    reason: well-known vulnerabilities with SHA-2 based hash functions
packages:
  passlib.hash:
    hashobj:
      sha256_crypt:
        digest_len: 256           # length of the message digest, true if it can change.
        algorithm: sha256         # underlying algorithm(s).
        salt: using                # can you directly input a salt?
        iteration: using           # are many iterations supported?
        pwinput: hash           # where is the password input? If it's in the function call, then 'incall' else function name.
        message_digest: hash    # where is the message digest retrieved from? If it's a return of the function call, then 'incall' else function name.
        uses: null                # name of package that this one uses for hashing, if applicable.
      sha512_crypt:
        digest_len: 512
        algorithm: sha512
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      bcrypt:
        digest_len: 184
        algorithm: bcrypt
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      des_crypt:
        digest_len: false
        algorithm: DES
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      bsdi_crypt:
        digest_len: false
        algorithm: BSDi
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      bigcrypt:
        digest_len: false
        algorithm: BigCrypt
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      crypt16:
        digest_len: false
        algorithm: BigCrypt
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      argon2:
        digest_len: 2^32
        algorithm: Argon 2
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      bcrypt_sha256:
        digest_len: 256
        algorithm:
        - Bcrypt
        - sha256
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      phpass:
        digest_len: false
        algorithm: PHPass
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null
      pbkdf2_sha1:
        digest_len: 160
        algorithm: sha-1
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null

      pbkdf2_sha256:
        digest_len: 256
        algorithm: sha-256
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null

      pbkdf2_sha512:
        digest_len: 512
        algorithm: sha-512
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null

      scram:
        digest_len: false
        algorithm:
          - sha-1
          - sha-256
          - sha-512
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null

      scrypt:
        digest_len: variable
        algorithm: scrypt
        salt: using
        iteration: using
        pwinput: hash
        message_digest: hash
        uses: null

      ldap_md5:

      ldap_sha1:

      ldap_salted_md5:

      ldap_salted_sha1:

      ldap_salted_sha256:

      ldap_salted_sha512:

      ldap_des_crypt:

      ldap_bsdi_crypt:

      ldap_md5_crypt:

      ldap_bcrypt:

      ldap_sha1_crypt:

      ldap_sha256_crypt:

      ldap_sha512_crypt:

      ldap_hex_md5:

      ldap_hex_sha1:

      ldap_hex_sha256:

      ldap_pbkdf2_sha1:

      ldap_pbkdf2_sha256:

      ldap_pbkdf2_sha512:

      atlassian_pbkdf2_sha1:

      fshp:

      mssql2000:

      ssql2005:

      mysql323:

      mysql141:

      postgres_md5:

      oracle10:

      oracle11:

  flask_security:
    hashobj:
      Security:
        pwinput: null
        message_digest: null
        iteration: true
        digest_len: true
        algorithm: anything passlib
        uses: passlib.hash
  argon2:
    hashobj:
      PasswordHasher:
        hashes:
          pwinput: incall
          message_digest: hash
          iteration: false
          digest_len: false
          algorithm: argon
  bcrypt:
    hashobj:
      hashpw:
        hashes:
          pwinput: incall
          message_digest: incall
          iteration: false
          digest_len: false
          algorithm: bcrypt
    saltobj:
      gensalt:
        salts:
          salt_digest: incall
  hashlib:
    hashobj:
      new:
        hashes:
          pwinput: update
          message_digest:
          - digest
          - hexdigest
          iteration: false
          digest_len: false
          algorithm:
          - md4
          - sha3_384
          - sha512
          - md5-sha1
          - sha256
          - sha512_224
          - sha3_256
          - sm3
          - ripemd160
          - shake_256
          - sha384
          - sha512_256
          - sha3_512
          - mdc2
          - sha224
          - blake2b
          - sha3_224
          - md5
          - blake2s
          - sha1
          - shake_128
          - whirlpool
      pbkdf2_hmac:
        hashes:
          pwinput: incall
          message_digest: incall
          iteration: true
          digest_len: true
          algorithm:
          - md4
          - sha3_384
          - sha512
          - md5-sha1
          - sha256
          - sha512_224
          - sha3_256
          - sm3
          - ripemd160
          - shake_256
          - sha384
          - sha512_256
          - sha3_512
          - mdc2
          - sha224
          - blake2b
          - sha3_224
          - md5
          - blake2s
          - sha1
          - shake_128
          - whirlpool
      md5:
        hashes:
          pwinput: incall
          message_digest:
          - message_digest
          - hexmessage_digest
          iteration: false
          digest_len: false
          algorithm: md5
      sha256:
        hashes:
          pwinput: incall
          message_digest:
          - message_digest
          - hexmessage_digest
          iteration: false
          digest_len: false
          algorithm: sha256
      sha1:
        hashes:
          pwinput: incall
          message_digest:
          - message_digest
          - hexmessage_digest
          iteration: false
          digest_len: false
          algorithm: sha1
      sha512:
        hashes:
          pwinput: incall
          message_digest:
          - message_digest
          - hexmessage_digest
          iteration: false
          digest_len: false
          algorithm: sha512
      sha384:
        hashes:
          pwinput: incall
          message_digest:
          - message_digest
          - hexmessage_digest
          iteration: false
          digest_len: false
          algorithm: sha384
      sha224:
        hashes:
          pwinput: incall
          message_digest:
          - message_digest
          - hexmessage_digest
          iteration: false
          digest_len: false
          algorithm: sha224
  werkzeug.security:
    hashobj:
      pbkdf2_hex:
        hashes:
          pwinput: incall
          message_digest: incall
          iteration: true
          digest_len: true
          algorithm:
          - md4
          - sha3_384
          - sha512
          - md5-sha1
          - sha256
          - sha512_224
          - sha3_256
          - sm3
          - ripemd160
          - shake_256
          - sha384
          - sha512_256
          - sha3_512
          - mdc2
          - sha224
          - blake2b
          - sha3_224
          - md5
          - blake2s
          - sha1
          - shake_128
          - whirlpool
      pbkdf2_bin:
        hashes:
          pwinput: incall
          message_digest: incall
          iteration: true
          digest_len: true
          algorithm:
          - md4
          - sha3_384
          - sha512
          - md5-sha1
          - sha256
          - sha512_224
          - sha3_256
          - sm3
          - ripemd160
          - shake_256
          - sha384
          - sha512_256
          - sha3_512
          - mdc2
          - sha224
          - blake2b
          - sha3_224
          - md5
          - blake2s
          - sha1
          - shake_128
          - whirlpool